[esp32-p4-base]
build_flags = 
  ${env.build_flags}
  ${moonlight.build_flags}
  ${ESP32_LEDSDRIVER.build_flags} ;use the LedsDriver class only for setBrightness and setColorCorrection and LUT
  -D CONFIG_IDF_TARGET_ESP32P4=1
  -DARDUINO_USB_CDC_ON_BOOT=1
  -DARDUINO_USB_MODE=1
lib_deps = 
  ${env.lib_deps}
  ${moonlight.lib_deps}
  ${ESP32_LEDSDRIVER.lib_deps}

; "possible fix if idf.py instakk fails
; platform = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF53 ; https://github.com/arendst/Tasmota/discussions/23758#discussioncomment-14010813


; https://www.waveshare.com/esp32-p4-nano.htm  
; https://www.waveshare.com/wiki/ESP32-P4-NANO
[env:esp32-p4-nano]
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
; board = ESP32-P4 ; https://github.com/pioarduino/platform-espressif32/blob/565f02434cd38858a59b7a010c950ffb2bec51df/boards/esp32-p4.json#L24
board = esp32-p4-evboard ; https://github.com/pioarduino/platform-espressif32/blob/565f02434cd38858a59b7a010c950ffb2bec51df/boards/esp32-p4-evboard.json
platform_packages  = framework-arduinoespressif32 @ https://github.com/troyhacks/arduino-esp32#feature/esp32p4
                    framework-arduinoespressif32-libs @ https://github.com/troyhacks/esp32-arduino-libs#main
board_build.partitions  = default_16MB.csv ;boards/ESP32_8MB.csv
; framework = arduino
; monitor_speed = 115200
build_flags = ${esp32-p4-base.build_flags}
lib_deps = ${esp32-p4-base.lib_deps}
; RAM:   [=         ]  11.2% (used 36580 bytes from 327680 bytes)
; Flash: [========  ]  82.3% (used 1726193 bytes from 2097152 bytes)



;https://www.olimex.com/Products/IoT/ESP32-P4/ESP32-P4-DevKit
;https://github.com/CreoKinetics/Olimex-ESP32-P4-Test
; compiling but crashing (firmware.elf': No such file, H_SDIO_DRV: sdio card init failed)
; see https://github.com/MoonModules/MoonLight/issues/3
[env:esp32-p4-olimex]
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
board = olimex-esp32-p4
framework = arduino
board_build.partitions = default_16MB.csv
monitor_speed = 115200
board_dir = boards
build_flags = ${esp32-p4-base.build_flags}
lib_deps = ${esp32-p4-base.lib_deps}
; RAM:   [=         ]   7.0% (used 36580 bytes from 524288 bytes)
; Flash: [===       ]  26.3% (used 1726203 bytes from 6553600 bytes).  !!!???


; running fine on https://github.com/CreoKinetics/Olimex-ESP32-P4-Test :

; [Boot] ESP32-P4 Async Web Server Test
; [Flash] Init 0
; ‚úÖ SPIFFS mounted 0 - 1061117952
; üìñ Content: Hello from P4 @ 5160
; [PSRAM] 32.00 MB
; [SD] begin‚Ä¶ E (5375) sdmmc_common: sdmmc_init_ocr: send_op_cond (1) returned 0x107
; E (5375) vfs_fat_sdmmc: sdmmc_card_init failed (0x107).
; [  5391][E][SD_MMC.cpp:295] begin(): Failed to initialize the card (0x107). Make sure SD card lines have pull-up resistors in place.
; ‚ùå Failed
; [ETH] init‚Ä¶
; [HTTP] AsyncWebServer started
; [SPI] bus initialized
; [Display] initialized
; [ETH] IP: 192.168.1.231  Gateway: 192.168.1.1
; [ETH] Speed  : 100 Mbps, Duplex: FULL


; We have:

; ============ Before Setup End ============
; [   172][I][esp32-hal-periman.c:141] perimanSetPinBus(): Pin 24 already has type USB_DM (45) with bus 0x4ff14ccc
; [   172][I][esp32-hal-periman.c:141] perimanSetPinBus(): Pin 25 already has type USB_DP (46) with bus 0x4ff14ccc
; sdio_mempool_create free:34092740 min-free:34092740 lfb-def:33030132 lfb-8bit:33030132

; E (1352) sdmmc_common: sdmmc_init_ocr: send_op_cond (1) returned 0x107
; E (1352) sdio_wrapper: sdmmc_card_init failed
; E (3783) H_SDIO_DRV: sdio card init failed

; FreeRTOS: FreeRTOS Task "sdio_read" should not return, Aborting now!


[env:esp32-p4-8MB_troyhacks_personal]
;; THIS IS PIOARDUINO NOW, NOT PLATFORMIO!
; build_src_filter =      +<**/*.c>
;                         +<**/*.cpp>
;                         +<**/*.S>
;                         -<**/dmx*>
;                         -<**/async-mqtt-client/**>
;                         -<**/methods/Esp32_i2s*>
;                         -<**/espalexa/**>
;                         -<**/DS1307RTC*>
;                         -<**/dependencies/dmx>
; platform                = https://github.com/pioarduino/platform-espressif32/releases/download/55.03.30-2/platform-espressif32.zip ;; https://github.com/troyhacks/platform-espressif32#Arduino/IDF5
; platform_packages       = framework-arduinoespressif32 @ https://github.com/troyhacks/arduino-esp32#feature/esp32p4
;                           framework-arduinoespressif32-libs @ https://github.com/troyhacks/esp32-arduino-libs#main
                          ; toolchain-riscv32-esp @ https://github.com/espressif/crosstool-NG/releases/download/esp-14.2.0_20241119/riscv32-esp-elf-14.2.0_20241119-x86_64-w64-mingw32.zip
board_build.arduino.upstream_packages = no
board                   = esp32-p4-evboard
board_build.mcu         = esp32p4
board_build.f_cpu       = 360000000L
board_build.f_flash     = 80000000L
; board_build.arduino.memory_type  =  qio_opi
build_unflags           = -O2
build_flags = ${esp32-p4-base.build_flags}
                          -Ofast
                          -ffast-math
                          -mstrict-align
                          -fipa-pta
                          -freorder-blocks
                          -fno-jump-tables 
                          -fno-tree-switch-conversion
                          -Wwrite-strings 
                          -fstrict-volatile-bitfields
                          -D WLEDMM_FASTPATH
                          -D WLEDMM_REMAP_AT_OUTPUT
                          -D PARLIO
                          ; -D WLED_DISABLE_LOGGING
                          ; -D PARLIO_TIMER
                          ; -D PARLIO_AUTO_OVERCLOCK
                          -D WLED_DANGEROUS_OPTIMIZATIONS
                          -D ARDUINO_EVENT_RUNNING_CORE=0
                          -D CONFIG_ASYNC_TCP_RUNNING_CORE=0
                          ; If you don't set PARLIO_PINS it's OK, it just sets all pins to disabled. Still "outputs" tho.
                          -D PARLIO_PINS=2,3,4,5,6,20,21,22,23,26,27,32,33,36,47,48 ;; GPIOs beyond 36 require some special ESP32-P4 LDO code or 47,48 don't work- added to WLED::setup()!
                          -D IMAGECACHE_BG_PRIORITY=1 ;; 1 is the lowst real priority, least run. 5 slows other things down.
                          -D CORE_DEBUG_LEVEL=0 ;; ESP_LOG_VERBOSE ;; ESP_LOG_VERBOSE == 5
                          -D WLED_USE_ETHERNET ;; Coexistence is slower but both work now. Ethernet is preferred automatically.
                          -D WLED_USE_ETHERNET_ONLY ;; Disable WiFi for performance reasons - on the P4 it needs high priority background tasks to talk to the C6

                          -D NDEBUG ;; comment this out if REALLY debugging for things like Parallel IO, PPA, etc
                          -D ARTNET_TIMER
                          -D MAX_LEDS=65535 ;; 18432
                          -D MAX_LEDS_PER_BUS=65535 ;; 18432
                          -D MAX_LED_MEMORY=64000000 ;; times ONE HUNDRED
                          -D DEFAULT_LED_TYPE=TYPE_NET_ARTNET_RGB
                          -D LEDPIN=192 ;; at least get 192.x.x.x set properly for Art-Net
                          -D BTNPIN=46 ;; Boot button is on GPIO 35 and works as a "button", but polling it messes up Ethernet.
                          -D CONFIG_ASYNC_TCP_TASK_STACK_SIZE=30000
                          -D BOARD_HAS_PSRAM
                          -D WLED_USE_PSRAM
                          ; -D WLED_USE_PSRAM_JSON
                          ; -D ALL_JSON_TO_PSRAM
                          -Wno-deprecated-declarations
                          -Wno-attributes
                          -D ESP_PLATFORM=1
                          -D WLED_USE_MY_CONFIG
                          -g
                          -D FASTLED_NO_FASTLED
                          -D WLED_RELEASE_NAME=ESP32-P4_16MB
                          -D WLED_WATCHDOG_TIMEOUT=100 ;; Setting >0 will make the watchdog not panic. Workaround for now.
                          -D USERMOD_AUDIOREACTIVE
                          -D USERMOD_AUTO_PLAYLIST
                          -D UM_AUDIOREACTIVE_USE_ESPDSP_FFT
                          -D SR_DMTYPE=9 ;; 9 = ES8311 (new) which is the codec chip on the ESP32-P4 EV board
                          -D SR_ENABLE_DEFAULT
                          ; -D TROYHACKS_FAILSAFE_BUSSES ;; in case you have a bus type causing resets during testing, turn this on, upload, busses will be removed at boot. Then reflash without this flag.
                          -D WLED_DISABLE_INFRARED
                          -D WLED_DISABLE_ESPNOW ;; not working yet due to API changes in v5.3
                          -D WLED_DISABLE_ALEXA
                          -D WLED_DISABLE_HUESYNC
                          -D WLED_DISABLE_MQTT
                          -D WLED_DISABLE_LOXONE
                          -D WLED_DISABLE_ADALIGHT ;; this no longer disables serial receive
                          -D CONFIG_ADC_SUPPRESS_DEPRECATE_WARN
                          -D CONFIG_I2S_SUPPRESS_DEPRECATE_WARN
                          -D WLED_DISABLE_IMPROV_WIFISCAN
                          -D USERMOD_ANIMARTRIX         # needs to be changed from int to uint32_t in the base class:  virtual void setPixelColor(uint32_t index, rgb pixel) = 0;  
                          ; -D WLEDMM_NO_MAP_RESET
                          ; -D WLED_DEBUG_MAPS
                          ; -D ES8311_ADDR=0x18
lib_deps = ${esp32-p4-base.lib_deps}
                          ; https://github.com/Makuna/NeoPixelBus#CORE3 ;; https://github.com/troyhacks/NeoPixelBus#CORE3
                          ; https://github.com/softhack007/FastLED.git#ESP32-C6
                          ; https://github.com/troyhacks/ESPAsyncWebServer ;; #v2.3.0 ;; https://github.com/softhack007/ESPAsyncWebServer.git#ESP32-C6
                          ; https://github.com/netmindz/animartrix.git#e6b7509b391cab97b59b8eb19580e67d4203ae7d # needs to be changed from int to uint32_t in the base class:  virtual void setPixelColor(uint32_t index, rgb pixel) = 0;  
lib_ignore              = IRremoteESP8266
                          ; WebServer
                          SD
                          SD_MMC
board_build.partitions  = boards/TROYP4_ESP32_8MB_1500KB_FS.csv ;; WLED_ESP32_8MB.csv
board_build.flash_mode  = qio
; monitor_filters         = esp32_exception_decoder, colorize
; monitor_speed           = 115200
upload_speed            = 921600
; framework               = arduino
; lib_compat_mode         = strict
; extra_scripts           = 
                          ; pre:pio-scripts/set_version.py
                          ; pre:pio-scripts/build-html.py
                          ; post:pio-scripts/output_bins.py
                          ; post:pio-scripts/strip-floats.py
                          ; pre:pio-scripts/user_config_copy.py
                          ; pre:pio-scripts/load_usermods.py
                          ; pre:pio-scripts/build_ui.py
                          ; post:pio-scripts/validate_modules.py  ;; double-check the build output usermods
